# 🧠 AI-MANIM 전체 파이프라인

## 📌 전체 Flowchart

```mermaid
graph TD
    A[입력 수집] --> B[구조화 (ToT/PoT)]
    B --> C[검증 (Sympy/WolframAlpha)]
    C --> D[IR 생성 (.mni)]
    D --> E[스케줄링·캐싱]
    E --> F[렌더링 (Manim/GeoGebra/Three.js)]
    F --> G[조립·후처리]
    G --> H[배포 (S3/Hub/Notion)]
    H --> I[관측 (metrics/logs)]
    I --> J[반복·수정 (JSON diff)]
```

---

## ⚙️ 단계별 핵심 아이디어 & 데이터 흐름

| 단계                    | 핵심 아이디어                      | 주요 방법                                   | 이전 연결                     | 데이터 타입                      |
| --------------------- | ---------------------------- | --------------------------------------- | ------------------------- | --------------------------- |
| **1. 입력 수집**          | 모든 문제 입력을 표준화된 데이터로 변환       | 이미지→OCR(), 텍스트 정규화·번역                   | 교재·시험지 등 원시 데이터           | PNG/JPG/PDF, TXT, JSON(raw) |
| **2. 구조화 (추론/계산 계획)** | 문제를 ToT(추론트리)·PoT(계산코드)로 구조화 | LLM 기반 ToT 생성, PoT 생성기, Section/Step 분해 | 입력 수집의 문제 텍스트             | JSON(ToT), Python(PoT)      |
| **3. 검증**             | 계산·추론 정확성 보장                 |  1차 → 실패시  대체                           | 구조화된 PoT, ProofTape 초안    | Sympy Expr, JSON(검증 결과)     |
| **4. IR 생성 (.mni)**   | 문제·구조·검증·시각화를 패키징            | ProofTape·Visual 지시어 포함 JSON Schema 생성  | 검증된 ProofTape·지시어         | .mni(JSON)                  |
| **5. 스케줄링·캐싱**        | 병렬·증분 실행 및 재계산 방지            | 해시 기반 캐시 키, 작업 큐 등록                     | .mni hash\_key 활용         | Redis/Key-Value, Job JSON   |
| **6. 렌더링 (시각화 백엔드)**  | 추론·계산 결과를 영상화                | , ,                                     | .mni의 visual.sections 지시어 | mp4, PNG, WebGL 객체          |
| **7. 조립·후처리**         | 분리된 결과를 완성 콘텐츠로 합치기          | partial 영상 병합, 자막·오디오 합성, 하이라이트 추가      | 렌더링 결과물                   | mp4, srt, JSON(편집 메타)       |
| **8. 배포**             | 학습자 접근 가능한 플랫폼에 업로드          | ·Cloud·Hub· API                         | 조립된 최종 산출물                | mp4 URL, JSON(인덱스)          |
| **9. 관측**             | 성능·품질 지표 추적                  | 로그 수집, 성공률/시간 대시보드화                     | 배포 후 실행 로그                | JSON/CSV, 시계열 DB            |
| **10. 반복·수정**         | 빠른 증분 렌더링 제공                 | JSON diff 적용 → 변경된 섹션만 재렌더링             | 관측단계 피드백                  | JSON Patch, 수정된 .mni        |

---

## 📦 MVP 범위 정의

| 단계               | MVP 범위                  | 확장 계획                  |
| ---------------- | ----------------------- | ---------------------- |
| **입력 수집**        | PDF 수학문제만 지원            | 손글씨(OCR) 문제까지 확장       |
| **구조화**          | 프롬프트 기반 단방향 풀이 구조화      | PoT 기반 다중 경로 생성        |
| **검증**           | Sympy 1차 검증만            | 외부 CAS() fallback      |
| **IR 생성 (.mni)** | 제한된 템플릿 사용              | 다양한 템플릿/스키마            |
| **스케줄링·캐싱**      | 생략                      | 캐싱·병렬·증분 실행            |
| **렌더링**          | .mni → GPT → Manim → 영상 | .mni → 직접 영상화 로직       |
| **조립·후처리**       | 렌더와 통합                  | 자막·오디오·하이라이트 추가        |
| **배포**           | 웹사이트 자동 업로드             | Notion/Hub/API 등 멀티플랫폼 |
| **관측**           | 결과값 정량 관측(성공률·시간)       | 대시보드·실시간 모니터링          |
| **반복·수정**        | 없음                      | 자연어/JSON diff 기반 증분 수정 |

**🎯 MVP 목표**

* GPT를 활용해 기존 영상 생성기보다 **정확도·배치·범위·논리성** 우위 확보
* **.mni 데이터 포맷**을 통해 수학 영상 생성화의 기초 틀 구축
* 향후 사용자가 `.mni`로 직접 영상화를 제어할 수 있는 **커뮤니티 생태계** 조성

